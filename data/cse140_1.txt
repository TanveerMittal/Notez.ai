 So again, welcome to the class. My name is Diana. She miniaturizing. My name, as you can see, is not your typical American name. I originally come from Croatia. And the picture you see behind me right there, that actually is a towel, no denial of big Croatia that they visited as a kid. So every now and then I'll pick a different background to advertise a bit. Needless to say, I loved growing up back home. I think, and I still go home every year except for obviously during Coven 19. I also happen to be lucky mom with four kids and a wife to the most amazing husband. All of which kind of happened somewhat surprisingly in America. I never planned to come to America in the first place. I think my mom saw this program for to be a student exchange and she thought this would be super fun. And the next thing I knew I was on applying to Arizona, I actually lived with the gradients family in Arizona for my last year of high school. I'm still very close with them. In fact, my American brother lives 15 minutes from my house, has two kids now that we visit to it. Then after my first year in high school here in America, I got scholarships and went to undergrad in Arizona in Flagstaff. And in fact, if any of you ever visited Flagstaff, it is one of the best places on Earth, if you like, outdoors, which I do really into a biking, hiking, backpacking, pretty much anything out is good. And so I really loved the four years that that was there. That was actually about, up to about 9191, war started and Croatia. And before it started, my sister had come to visit to learn English. She actually turns out to be super talented and languages in contrast to me, I'm really not that great. So I learned English because nobody would speak creation to be. And that's about as good as I got. But yeah, you know, she was 15 years old when she came to visit me and then she arrived in like May, had a ticket to go home in August. In July, bombs were dropping on our hometown so she couldn't go home. So by August they became a proud mommy to a 15-year-old. So actually raised my sister. From that point on. I finished my last year of undergrad in Flagstaff. 9192. Timeframe was a timeframe and there were a lot of economical problems. There was very little hiring, especially no hiring of foreign students, which is why I went to grad school. I got accepted to U of a to do my PhD, actually also got into Stanford. They just didn't offer me money and that was the time when I had so little money. I couldn't even pay for a ticket to come visit University. So I moved to Yale vague and really enjoyed the group that I work with there. Did not enjoy the heat, turns out heat than me or not good friends. So that led to ultra-fast master's thesis because he was so up in the summer and being poor, I couldn't even afford air conditioning. So I spend days and nights in my office, ended up publishing three papers and finishing my thesis by 93. And then got a job in Baer Yeah, in Silicon Valley. In fact, in the heart of Silicon Valley as a chip designer, which was actually my dream job. My, all my degrees have been in electrical engineering because I've always really loved hardware design. You know, when I was a kid, I got into programming on my own and wrote the first game. And after that, they thought they knew everything about software. So I wanted to learn of hardware. Obviously, I did not know everything about software. But I guess as teenagers are Yoav and think you know more than you do. So at any rate, in Bay Area, I worked as a chip designer for four years. I designed some of the first FPGAs that the vector still sold by Altera and adult to this day, which is kinda cool, got some patents as a result of this work. If any of you are ever interested in becoming patent attorneys, I actually know quite a bit about it, both from working with patent attorneys. When I was an engineer, Belle Terre, a bitch, what's a funny experience? You know, I remember writing a description of my patent didn't normal English. What came back from patent attorney was completely unreadable. I had no idea what they described, even though it was something that I actually design, seems a little silly. In the meantime, I have worked as an expert witness a few times, submit patents to turn is and I've gotten a lot better at legalese. And I've learned that some of our engineers for really good at writing and at arguing become amazing patent lawyers. So if that path is of interest to you, let me know. I'll be happy to talk to you about it. As you can hear, because I'd worked in Silicon Valley and design. I know a lot about what life is like as an engineer and a typical Silicon Valley companies. So let me know if you have any questions about that. Towards the end of my time I tell Tara, which is now in tau, I started taking classes at Stanford because I got interested in maybe continuing research. I figured out that I enjoyed building products. I'm really left building the first chip. The second chip was a little less interesting. By the time the third chip rolled around, I was getting thoroughly board and I needed something different. And that kind of gave me a hint that getting into research was more for me than doing the standard engineering work. So I took a class at Stanford while working full-time. I would not recommend that at all. It was deadly. I had 0 life and by the end of the quarter I told myself Never again. And then a year later I did it again. I don't listen. I clearly cannot keep my word. So I took a second class and by this time, I was thoroughly convinced that I wanted to do PhD. And doing this made more sense full-time because he was really hard to do classes and full-time work. So at that point I quite out there and I moved full-time to Stanford PhD. I worked, actually started moving more toward system level design. I got really interested in interface between hardware and software. And this is the work that they do today. So the beginning of my PhD, the sum of the first work was looking at low-power design for chips. But then very quickly I started looking at low-power design of systems. And how do we design better embedded system. So things like cell phones, laptops, tablets, and both software and hardware aspects. So in my group, we do a lot of this type of work. After the first few years of Stanford, I actually had gotten through all the classes and they started getting a little bored because I can just do research whole day along. And I guess you can see that this is a theme with me and I need a lot of new things all the time. So what I did is jointly with another friend who was doing the PhD, nobody like me. But then an MBA at Stanford over the next few years. So within about a three year span, I got my PhD at an MBA. Granted there was a high-tech version of MBA. Because at that point I was thinking about spinning out the company based on my research for PhD. In fact, submitted a business plan, got really good reviews on the business plan and a lot of interest. And then the market crash, this was a crash of 2001, was a big internet bubble. So that kind of killed that idea because all of the sudden all the funding pulled away. So my buddy and I decided that we would eventually go into academia and then spin out the company later. In the meantime, I went to HP labs because during my PhD at Stanford, I had worked at HP as a research scientist part-time. This actually happened by accident. I went to a talk given by the director of HP labs. His talk was all about the future of low-power devices. And I told him, look today, your devices die almost immediately the moment you try to stream video, batteries dead, what are you gonna do to make it more efficient? And he said What I'm gonna do is higher you minterm. So that's exactly what happened. But I got an internship after my first year and PhD. And then there is shaped by the end of the summer led to a publication and to an offer from HP to be permanent employee. So when I finished my PhD at Stanford, I stayed at HP Labs until actually 2005. So at that point I had, had two kids. And we're starting to get bored doing researching it in the street. I found that I really loved was the one day a week that I was at Stanford. I had this nice position wearable IS research faculty at Stanford part-time and full-time researcher at HP labs. And you know, I I really love the one day that I was actually working with students and the team at Stanford. So I decided that I needed to flip my life and spend most of my time in academia and continue working with industry. So that's when I moved to UCSD. I picked UCSD not only because it's an amazing place in terms of climate, area. Not only because I absolutely loved water, I'd love surfing, but because I really, really loved the collaborative culture of this university, I find that it has really enabled me to run many different types of projects. Everything from chip design all the way to the design, large-scale systems, Smart Grid, Internet of Things projects. More recently we have been working on accelerating analysis of COBIT 19 sequences. So when we first started this project, it was taking multiple weeks to just analyze once one virus from beginning to end. And now we got it down almost the whole pipeline, except for one part of the pipeline is now down to a couple of hours. This last piece turns out to be critical. It allows us to do, to understand the relationship between different strains of viruses. So it would allow us to understand if you're infected by a particular strain, how that's related to all other strains and how possibly you may have become infected. And it allows us also to understand how likely your infection is to spread to others and how complex symptoms you may get. Because that varies from string to string. So we're at the point now where I think within this month we should have the tool that will allow the first-ever analysis of all of the different sequence COBIT 19 genomes. Up until now this was not possible. So I'm super excited about this. And my group, as you might imagine, has been working around the clock to make this happen. So anyway, this brings me basically to today. Why am I teaching this class? I teach this class because I love this material. I really enjoy logic design. I enjoy hardware. I enjoyed the way hardware connects to software. So this turns out there's one of my favorite things to do and hopefully you will learn to enjoy it as well along with me. So let's get started. I already gave you my name. My name is Diana. She miniaturizing my e-mail, Diana, that misc at edge the UCSD, that TDU is an email that I specifically asked for 140. So please put 114 subject line. This will prioritize your emails to me. I actually check this mailbox all the time. It allows me to filter out your emails from all the other stuff I get in my main mail. So if you send the email to Toyota at UCSD, I don't guarantee that all see it. If you send that to this email, I will see it within a day for sure. My office hours will be Monday spikes the 6PM. And by appointment, I am super happy to meet with you anytime I actually really enjoyed getting to know you. And every time I've thought 140, a bunch of students have joined my research group to do research. So by all means, if you're interested, let me know. I don't actually have any requirements for you to qualify to do research. The only requirement is I need you to be honest with me. How much time you have. You need to take a look at that that will work with you and let me know what you're interested in and also provide your resume. So we'd have an idea what your background this. So I think that covers the basics for me. They have amazing team of TAs and Tutors. Their office hours and contact info is on 140 website. But we'll also put that information in Canvas. We haven't quite figured it all out yet. I believe my one of my TA has published it as well as EC 140 Google Calendar. My assistant is you, Breanna is I gave you her email here. She is very accessible during normal working hours. I believe she is online between 8400 PM every day. You need to get hold of me. She has my father births so she can get hold of me. But to be honest with you, the best way you'll get hold of me is over e-mail anyway. Since I'm on the computer all the time. Discussion sessions for this class or on Wednesdays, there are two sessions due to 254 to 450. Remember thinking about holding just one session, two to 250, it's going to be recorded. Like me know if that's an issue. So if it's a problem, then we will hold both. I figured since we're recording anyway, one recording session hopefully will be enough. But if not, again, we'll keep both on the schedule. Grades, grades are going to be posted on Canvas. You should have access to cameras. I have also posted today's lecture slides there. I'll do my best to post all of the lecture slides on so you can have access to it through Canvas. The plan is to also posted on the class website. And I'll go over this in a second. Homeworks are gonna be on great scope. So make sure you can get into the great scope. The discussion is on Piazza. Piazza also has the code for great scope. So if you need the code, access it right over there. So I think that covers the basics. Let me get to the class website question. And the website is shown right here. There you'll find syllabus, theory and Twitter contact information and office hours, class policies and course schedule. And in fact, let me kind of go through this very quickly. I'm going to stop sharing my slides briefly so I can go through the website and let me share there. So here is the page that shows the calendar of the class. This is probably the organization central for the class. You can see here the outline of all of the weeks, what's gonna be happening every week? I generally keep approximately this tempo saw. Although they're likely changes, the changes are pretty minor. And that changes will not happen to homework due dates or two exam times and due dates. The only changes that might happen is to how fast that cover material. So you can see here that will be posted discussion session slides. And I should note that this week there will be no discussion session because we will not cover enough today to really talk about much of anything. We're going to start discussion sessions next week. You will also have slides. So if you click on my introduction link, that should bring up slides for today's lecture, which are coming up right now, you will find that exactly the same slides and canvas as well. So either way you should be able to access them. Notice that this slide that covers a couple of days worth of lectures, and this is pretty typical throughout the class. I will also be posting annotated slides. I usually post them at the end of the day. Sometimes say forget it. So if that happens, just remind me. I should be on time on this. The next is we have required textbook. The required textbook is by Harris. That textbook. Let me show you here. I have also a slide that shows it. You can see it right here. It's the second edition. So I would strongly advise you to read the material on the recovered textbook prior to class that will help you understand the material in class in sections that you should be reading. I listed right in here. Then homeworks will be posted on here. They're also going to be a great scope. Now you'll be turning them in ungrateful. Notice that homework's are Saigon Thursdays and they're always due on Thursdays. There'll be four problems and each hallmark of which only two will be graded. But you will not know which to ahead of time. And homework's are done individually. There's also recommended textbook that looks like this. It's digital designed by, by heat. I also posted the chapters that corresponds to lectures. But he actually has a really nice introductory material. So if something doesn't make sense in Harris's textbook, by heat spoke generally will explain it in a little bit easier way. My slides come from both textbook and also from the third textbook by cats and bright yellow, which will, I will show you in a second. Notice that the bottom off here, I have solutions to the odd numbered exercises in the Harris's textbook. So leverage this to get a little bit more practice for this. The other thing I should note is that we have three exams. Prior to each exam on Tuesday of that week we'd have review. During the review will bring examples of simple exam questions from previous exams. I will also post sample exam and its solutions. So what I will cover during the review will not be the same as what I post. The sample exam will be for you to practice. And you can get answers to any questions related to add during the discussion session, which will happen on Wednesday, before the Thursday's exam. On Thursday, your exam will be open book and open notes. You will have 60 minutes in a 24 hour period to actually take the exam. There will be no lecture that they that they I will be available to answer any questions. I will not be answering questions that are directly related to exam to make things fair for everybody who's going to be taking that exam during the 24 hours. If we make some mistakes on exams, will have to adjust the grades accordingly. So hopefully there will be no issues. But if there are issues, we're going to deal with that offline afterwards. The same thing is going to happen for the next exam. You'll see the same pattern. We're going to have review on Tuesday and then on Thursday we're going to have the exam during the 24-hour period. The exams are actually cumulative in this class. So Exam one covers all the material up to and including whatever is covered right before the review. The Exam two will cover all of that material up to the week seven of the class. Now, having said that, the emphasis on the problems that appear on exam two will be on material that happened since exam one. So most of the problems are really going to be related only to the two weeks, week 56 that we cover. But in order for you to solve these problems, you actually need to know this stuff from before. So that's the relationship. The same thing will happen with Exam three. Exam three is comprehensive, but the emphasis will be on the last few weeks of exam prior to the exam too. And again, the same pattern, open book, open note, 60 minutes in 24 hours and review session on Tuesday with sample example and solutions to sample example available. There is also a take-home bonus final, This, this is completely optional. Nobody has to take it. And all it will be assigned on Monday of the finals week. It'll be due the latest date that both of the one of the sessions has the exam final du so let's say that session a has exam due on Thursday at nine and Session B has exam, final exam on Thursday at 05:00 PM. That bonus final will be due whenever. Latest session is, which in this example would be 05:00 PM on Thursday. And I'll post exact due date on this schedule. As the time gets a little closer. There are six homeworks in the class. They're always come out on Tuesday and they're due on Thursday. Notice that during the week of exam, you have no homework. Do you do however, have homework assigned for the next Thursday? Ok. I think that pretty much covers the schedule. The other thing I would like to cover is the syllabus. The syllabus gives you my name, my office hour switch over Zoom link. Again, I'm happy to meet with you outside of this time as well. I also am happy to stay a little bit longer on Zoom after this class, I do have a little bit of extra time. So my email, you've already gotten make sure to put TC1 40. I have two sections that I'm teaching today and there are two discussion sessions. The plan is to hold only the two to 02:50 PM discussion session. Let me know if that's a problem. If I don't hear anything, then next week a single discussion session will be recorded and you will see it DOM canvas. Then I have great team of TAs and Tutors who will be introducing themselves to you in a second. My admin as irina, if you click on her name, email will pop up. This is her phone number. The course. The idea is for you to learn just enough about how hardware is designed so that you can design a simple CPU by the end of the class. And that way you'll be ready to go into computer architecture, CSE 141 as the next class. Cse 140 L has to be taken concurrently with this class textbook, required textbook. I already showed it to you. Here. It's actually where you can click on a free link to download the PDF. It is by David and Sarah Harris makes sure that you get the second edition, the first edition, insignificantly different. Other recommended textbooks are thankful by my Hebrew which I showed you and by cats and were yellow, which I'll show in my slide in a second. We will use Piazza to answer any questions. If you have any urgent questions posted on Piazza, have all of my teaching staff will be monitoring it around the block. Canvas is a place where you can check your grades. Piazza is the place to ask any questions. Grading the final grade for this class will consist of homework grade, which is 20%, and the three exams, Exams wanting to are worth 25% each. Exam three is worth 30% each bonus they come find all gives you a maximum 1% on top of the grade. Again, this final is optional. If you get a 100% in the final, that gives you full 1% on top of your grade. Homeworks. As I said, the homeworks will be short for problems of above which two problems will be graded. The problems in homeworks will be very similar to what you're going to see on the exam. The homework problems might take a little longer than the exam problems for obvious reasons that will give you a lot more time. But the type will be very similar to what you can expect to see on the exam. You do need to solve them individually, and you do have to turn them in by the deadline. So for each homework, from the moment it's assigned, you have 24 hours to turn to them. And they'll be 10% score penalty for one day late homework. And no points are going to be given for Edison turned in past that one day. So a hallmark is assign at 01:00 PM Pacific on Thursday. It is dou by 01:00 PM Pacific on Friday. After one PM Pacific on Friday, you lose 10% until 01:00 PM Pacific on Saturday. After one PM Pacific on Saturday, you get 0 points. Other than this, if you get, if you don't show for exam, you won't get 0 points. There is no late the exam, you have 24 hours to take it. If you pass that 24 hour window, you will not get points. Exceptions are made for any unusual situations, medical emergencies, death in the family, or other big life altering situations. But for those, you need to provide documentation and you need to let me know as soon as you can. Academic dishonesty, I need you to really know and abide by UCSD policy and integrity of scholarship as described in student conduct code into UCSD General Catalog. Also make sure you're familiar. Reject Jacob School of Engineering student honor code and of course policy, this describe their homework has to be completed individually. All exams are individual and effort. I do expect for you to work in groups for homework, it's totally fine to talk to your friends, but with every split them paper needs to be just your work. Providing your work for others to copy is academic dishonesty. Anybody who violates UCSD is academic dishonesty or UCSD student conduct policies will earn an F in the course and will be reported to your college games. So please be careful if you have any questions or issues by all means. Ask them and let us help you. Okay. At this point, I would like to take a short break and half my TAs and Tutors introduced themselves. While I quickly review all of the questions you have posted in chat, we're going to go in order that's posted here on the website. And if you can give your name, the degree, or pursuing that UCSD and whether your first-time Theia or tutor or you've done this before, you can get started with because that would be great. Cuz I'm I ready professionally than JSON? Json currently pursuing a PhD and my second here in this cookie, Ritchie. Ritchie there. I don't think so. Okay, let's move to the A1. Okay. Hi, this is Day and I'm a PhD student in the EC department. I'm in my fourth year now. And FDA for CSE 140 in 140 L before and see you all in the offices. Thank you. Hi, I'm third-year PhD student in the department and this is the first time I'm taking a CSU, Anthony CFS. Hi, I'm Crenshaw. See as fourth year SCS Bader and that says the first time I'm tutoring this boss pod is this David LA County for CON, investigating UCSD, and that is my first time teaching this class. Hi, this is Jake. I'm a third year computer science student in this my first time during this class. And I'm a fourth year compared, didn't migrate to the cloud. We don't have wound up collatz moved to Jintao high, visiting hell. Third-year undergrad student majoring in computer science. It's my first time teaching this class. 11. Jing, huh? Oh hi everyone. I'm Jai Siya, Luftwaffe air and our grad students in computer science is awesome. My first time cheering. If feel free to come to my office hour each having questions. Jeffery. I also had a question or an exam is going to be on camera. So the plan is to randomly generate questions for exams using Canvas. But to actually put them on great scope, it will give you a little bit more detail as we get a little closer. Are there any other questions? I don't think I think everything else has been dealt with. They see that somebody posted the correct length. Thank you. Okay. So let me get going then. And I'm going to switch back to share my slides so I can show you pretty pictures off the books that we're gonna be using. Just the takes me a minute to do this. Okay, so let's go back here. So here you can see the required textbook and also all of the recommended textbooks. So digital designed by Frank but heat and contemporary logic design by cats and boring yellow. Lecture slides are going to be the derived from old three. I would say most of it comes from by heeds and Harris's. As they said, the Harry's textbook is available for free. I provided the link on the website. Back eats textbook has a very nice intuitive explanation. So if something is not clear and Harris but heat is a good Next, stop, cats and worry a lot, give a lot more details on design of algorithms. So if you're interested in more in-depth study, I would highly recommend that book. The issue is that cats Amborella actually are a little bit more complex, so I would not use that as my first step. Grading. I use gathered grading scale in this class. So, you know a, I do use a minus a and a plus, and I generally give pluses and minuses at my discretion, what I normally do is I look for some natural breaks. So you will never get a lower grade than an a if you have 90% or more in my class. Same thing for b, c, and d. However, you may get a higher rate. So for example, May 92% be an a, but it may be an a minus also, depending on what is the grade distribution and the class. Great components. I think I already covered that homework 20% Exam 12 or 25%. Exam three is 30%. What I didn't mention is that in exams, I plan to actually have more than a 100% to the grade so that you'll actually get some bonus points. The plan is to have each exam be worth a 110% out of a 100. Which basically means if you get a 100% grade, you have just earned yourself 10% bonus in the class. So this hopefully will help if you have some homework or that you didn't get as good of a grade. Or if in some other exam you don't get as good of a grade that they come final lazy. Another way to get bonus points. Again, it's completely optional and it will be posted on Monday of the final week. If you get a 100% on the bonus spinal, that adds 1% to your grade. If you get 50% on the bonus, final duct will add 0.5% to your grade. Okay? So hopefully that answers all degrading questions. Some policies. The important thing is that studying in groups is very much encouraged. However, the work you turn, it has to be done on your own. And I am very serious about this. Both giver and receiver won't be treated equally and will be equally culpable. So cheating on homework or an exam gets you F in the course and you will be referred to Academic Integrity Office. So generally, what I do if I suspect cheating, I simply refer directly to academic integrity and I let them decide what out. But in the meantime, you do not get a grade for that particular assignment until I hear back from academic integrity. So please don't do this. I really would like to help you be successful in this class. So by all means, contact me, contact the teaching staff, get some help. If you needed exams, as I said, are on Thursdays, they are in 24 hour period. That will last 60 minutes. You can pick any 60 minutes during that 24 hour period. The homeworks similarly will be posted on Thursday at 01:00 PM, Pacific on great scope. And you have one day, 24 hours to turn it in. I'm sorry, you have a week to turn it in and then one day late after that for 10% lower grade. So this means that they will be due by 01:00 PM Pacific on Thursday. And if you turn them in prior to 01:00 PM Pacific on Friday, you will just lose 10% more than on daily to gets us 0 points on the homework. Regrade. Saw it happens often that we make mistakes during grading. So you will have 24 hours after the grades are posted to ask for a regrade. When you ask for a regrade, I need you to be specific on where is the problem? What do you think needs to happen? Tas and Tutors will review and add or subtract points is appropriate. If you're still not satisfied at that point, contact me. So what I found is that very large majority of situations to innovate your request to reweight the regrade, TAs and Tutors will address it to your satisfaction. Very few, Less than 1% of the cases I need to step in and take a look. So give pleased TAs and Tutors a chance to fix any mistakes that may have occurred. Okay, at this point I'm going to take a short break because I see that we have some questions in the chat. So let me take a look at what the questions are. Let's see. Great scope is up yet an entry code has been posted on Piazza. And I think that's it for questions so we can get moving. We're so Highway 6140 related to other classes. So in 140, we're going to cover the basics of digital circuits that you need to build. Components that are going to go into microarchitecture. So we're gonna belt all the basic logic gates. I know you'll learn Boolean algebra. So you learned about and's and or's and not's. Well, in this class you're going to learn how to build hardware that actually implements this. And from those basic grades, you're going to learn how to design adders and subtractors and multipliers, and how to design control circuits and finite state machines that are needed to actually put together a CPU. By the end of this class, you should be able to have design a full-fledged simple CPU. And that will then bring you and have you read A4 CSE 141, in which you will take that simple CPU design and make it more complicated and more similar to today's pipelined processors. How this class relates to CSC 30 is that NCSE third, you learned about the interface between operating system and the architecture. And more importantly, you learned about the assembly programming. So in this class you will learn how exactly those assembly instructions are implemented in hardware, and how exactly they get decoded, what piece of hardware will execute them and how they will be executed. And you will get to the point where you could in fact design a whole new assembly code, assembly set, set of instructions and implemented in hardware yourself, if you'd like. On the other side. This class also relates to electrical engineering classes which allow you to understand what it is on the inside of the logic gates. So how would one design these digital circuits? How do transistors and gates behave when looking at it from an analog perspective? Which turns out all this digital designs that we think are simple zeros and ones in fact, are not simple zeros and ones and do require a lot of detailed analog analysis. So if you're interested in this, by all means, take electrical engineering classes that cover that material. In this class we will, and it actually touch on some of the devices. We're going to talk about cmos transistors. And we're going to get started on this today. So I will give a very quick overview of basic physics, specifically of Ohm's law and a little bit on capacitors. Because we'll be using that to understand a little bit better how transistors operate. And then from transistors were going to build logic gates. What you need to understand will all be covered by me and the class. So there's no need to panic if you've never took undergraduate physics class that covers electricity, you will get the material you need during my lecture. The textbook also covers some of this material. So do take a look at the chapter reading that was assigned. I think this answers all the questions hopefully on how does this class relate with the rest. There is also an obvious question on why bother with hardware. I mean, many of you are planning to become software engineers and I'm guessing and hoping to ignore hardware. Unfortunately for your world is changing dramatically. And in fact, we are in a new golden age for computer architecture because the processors that vf relied on up until now to write code on don't do very good job of running more complex. So workloads that we need to run today, specifically Anything that analyzes lots of data does not run all that well on classical CPUs. So people have started looking at how to design accelerators, which can make much more efficient implementation for things like neural networks and other similar large-scale data workloads. So if you really like to, for example, do fast object detection in a lot of different images. You're not going to be using a standard processor. What you're going to be using is neural network accelerator. And Google has been using those for quite a few years now. They call it the tensor processing units or GPUs. And people have started using them in their cell phones as well. Many of the cell phones with Gaul and neural processing units or some similar name to this. Without those, you simply cannot run fast enough. So when you write software, you kind of need to understand what these accelerators of capable, capable of. Otherwise you will not have to performance you need from your software. And you will definitely not have the energy efficiency, but you need to get. So we're seeing now time at which dramatic changes are occurring in hardware design that will change the way you write software forever. And so future jobs and current jobs already require better understanding of hardware. This is especially true if you're looking for jobs in embedded computing. In this area, you absolutely need to know what hardware you're running on and what the hardware is capable of. And when I say embedded computing, a great example would be writing code for cell phones, or writing code for cars, or writing code for any larger machinery. So and you can see, if you're interested in more details, I highly advise you read this article. And that was published by John Hennessy and David Patterson, who got the Turing Award recently. During the award in computer science is equivalent to nobles prices. So clearly you can see that these dramatic changes are happening. Now beyond that, the changes are already here. They're in your pocket. So in the past, we used to just write code for standard processors. And here is an example of an Intel chipset that has multiple same processor cores on them. These cores basically on your standard Intel CPU. Now notice that even what we called old-school processors already have accelerators for graphics processing. So GPUs, when you actually look at today, so phone designs, and this is an example of the chip that's in Samsung Galaxy Note ten. Let me turn on the more recent chips. What you can see is that the standard CPU is a very tiny piece of the big picture. The standard CPU here, a 55, it's an ARM core which corresponds to your typical intel processor. It's a small part of the area. Most of the area is actually occupied by accelerators. Here's the GPU, here's the little processing unit which actually does the acceleration of neural networks. Down here, it's not labeled, but what you have is image processing accelerators, audio signal accelerators. Accelerators to deal with the communication subsystem. Accelerators that deal with object detection and various other accelerators. So the code that we're writing today hast already take all these different capabilities, including code for, for example, digital signal processors. Which have existed for decades in any kind of mobile device. And actually also in your PCs, you just didn't know that they were there. So world is changing rapidly and I think what it, the need for better understanding of hardware is already here. And going forward, we're starting to design completely new systems. These new systems, instead of having a processor that separate form from memory, will have processing in memory. And this is exactly what this stands for. Pin him stands for processing in memory. Chips that do this have already been produced to this day. And my group is currently working on one of the newest cognitive accelerator chips, which will be capable off about million times more efficient than classification and clustering than was possible by the best state-of-the-art processors today. And the reason why it can do this is because the data does not move out of memory. All of the processing happens in memory, and it happens using new class of machine learning algorithms. There are particularly good for this type of analysis. A little example of what something like that might look like as shown in this picture right here, where you see in an encoder and then you see a cross section of what it consists off. So in this class, as we come across some of these new designs, I will give you a little bit of background on the type of work that's done today in research and the types of projects that you could also join if you are interested in doing research is a part of my team or other groups in computer science or electrical engineering department. So today, as I said right in the age where hardware is dramatically changing and the software's interaction with hardware is completely changing. The scope of CSE 140. We're gonna get started with Boolean algebra, which you should be very familiar with. And we're going to end with hardware design of a simple CPU. And actually literally the block diagram of the CPU. Or we're going to talk about the shown below, its mips processor that represents one of the earliest processor designs that have been used to teach classes for quite a long time. What's nice about it is it's relatively easy to understand. I know right now it looks very unclear to you, but by the end of the class, you will be able to walk me through every single, single step of this diagram. Pass that you will have 141, where you're going to take the processor design you see in this diagram. And you will just add components to it to make it more similar to what is in production today. So I think that pretty much concludes the introductory part. And what I would like to do next is number representations. I don't see any questions on chat. So I think we're going to get moving on number representations next. I assume that all of you know this material because it should have been covered and CSC 30. If you don't know right. Or if for some reason you don't remember it, please do review. You will need to know this stuff going forward. So just as a way of quick review of auditory view of how we do representation of base ten decimal numbers. So if I want to represent 523 number, I'll represent that by saying I have 51 hundreds. And I need to add to that two tens, and I need to add to that three ones. And that is what's going to give me 523. The same thing happens in binary. In the same situation in here. I have one times two to the second power, which is same thing as saying one times four plus 0 times two to the first power, which is same thing as saying 0 times two. N plus one times two to the 0th power, which is the same thing as saying one times one. In both cases, the number I'm going to get is decimal five. So I need you to know how to go from the binary representation to decimal and back. The other thing we need to know and need to understand is how to go between binary and hexadecimal and octal representation. Hexadecimal or base 16 representation. We use primarily when we tried to represent larger size binary values that may be difficult to parse if you just read the binary number together. The great example of this is if I have whole bunch of wires, let's say that I have 16 wires put together and all the wires have zeros and ones on them. It will be really hard for me to parse this 16 bit binary number. But if instead I use hexadecimal, that's only for hex digits, which is much easier to read. So oftentimes, as I said, this is used for buses of wires. So how do we go between binary and hex? Generally we would take a binary number. And here I should be a binary number with a little breaks in between the digits. Because went to transition from binary to hex, we want to group for binary digits into a single hex value. So if I group the first four digits, this will match 11111 bitches F in hexadecimal. The next four digits, or 1-0, 1-0, which matches a in hexadecimal. And then the first one is 1-0-0 is 0, which matches eight in hexadecimal. So put together the number in hex is eight a f. So this number is eight a F in base 16 or hexadecimal base. Okay? I can also go the other way by simply looking up what f is and writing it down. So if I want to write the number seven, be in hexadecimal, I would look up B. And now we'll see that that's 1011. And I would look up seven and I would see that the 0111, and that is my binary representation. Octal is used a little less often, but the reason why I teach it is it's often used to represent color. So RGB, single color are would be represented using eight bits, which is very easy to do using octal representation, the NACLO representation. You have digits from 0 to seven, which means you cannot have an eight to the moment you have an eight, you have to go to the next higher power, Soviet octal. The powers are powers of eight. So here I would have four times eight to the second power, two times a to the first power in seven times eight to the 0th power. The other nice thing about the octal is that you can go between binary octal very easily by simply grouping bits in groups of three. So in this case, I would take a first group of three, which is 111, that gives me seven. Then the next group is 010, that gives me a, a two and octal. And the first group is 1-0-0, which gives me four and octal for four to seven in octal. If I want to do the same thing with my number that they started with seven being hex. I would again group by using three digits at a time. I would start with the lowest digit. So 011 in octal is 3111, inactively seven. And then I have only 01. To deal with that, I would just add a leading 0 to my a number. So now I have 001, which is one in octal. So seven be in hex representation is 1111011 in binary, or 100, 73 in octal representation. Okay? So this is pretty much all I need you to know on how to go between decimal, binary, hex and octal representations. And I don't see any questions on this. So I'm going to get moving to my switches and cmos circuits. So here, let's get started first with switches. Switches are the basis of all binary digital circuits. And this is exactly why actually covered them in this class. Because we need to understand how switches operate in order to be able to analyze performance a Bar consumption of larger circuits. And in order for you to understand why certain gates are faster for certain binary input combinations than other gates. So in order to do this, I would like to go back to a very simple circuit where I have a battery, a 9-volt battery in this case, that is connected to a light bulb. Let's imagine that since Christmas just happened to this is my Christmas tree light bulb, LED bulb that likes to glow red. In order for it to work, I need to connect it to a power source. Certainly needs to be some switch here. Then I close and Hans, I close it. That is going to generate current that is going to flow through the wire and it will flow through the light bulb. The reason why the light will flash or turn on the red because I have a little filament inside. And in case of valet de I have special material that has some resistance associated, but it's this resistance that actually causes the material in a light bulb to heat up into emit light. In LA B. It's a slightly different process, but again, it's due to a particular type of resistance. The resistance combined with a current, which here is represented this 4.5 amperes, provides the final relationship between voltage, current and resistance. So nine volt is the voltage of the battery. Voltage represents a difference in electric potential between the two points. So in this case I have positive and negative terminal. The difference in electric potential between those two terminals in this particular battery is nine volts. And electric potential basically tells me what amount of electrical energy I have stored inside of the battery that I could release once the switch is closed. This is very similar to the idea of a dam in which I made have bunch of water. And the dam has some sort of a switch or in a faucet that you can open that is connected to beg hell, through which water can flow and fall on the turbine. I don't know if any of you have ever visited Hoover Dam. It's pretty impressive to see how far the waterfalls, and you can actually take a tour down below to see the literal huge turbines that move by the water that then turn once you open your switch and generate electricity. This water seeping up here has potential energy that can be generated once it starts flowing down the hill. This potential energy is related to the height at which it's cold, and also to the amount of mass the water itself has and the speed at which it's going to be flowing down. The amount of electricity you're gonna get is a function of how you designed your turbine. The same story happens inside of the battery, except now instead of movement, that's generating electricity inside of the battery, what's generating electricity is the chemistry of the battery. So when you look at lead acid battery is the smallest voltage you find is 1.5 volts. The reason why this happens is because the smallest potential you can generate using lead acid chemistry is in fact 1.5 walls. And if you want to generate something bigger like nine months, you just have to combine lots of little ones together. So if you were to open a 9-volt battery, you would literally see lots of smaller 1.5 what cells. Current gives us flow of charged particles. So current is change in charge over change in time, or DQ over DT. The resistance is tendency of the wire to resist sir. It's actually a property of the material. And it's related to the geometry and resistivity, which is represented by little rho. This is actually a material property. Geometry would be the length, width, and height of the resistor. So literally what are, what are its, what is its size? How does it look? So all of this put together gives you Ohm's Law. So if I have a 9-volt battery and I have 4.5 Ampere's of current. What is my resistance? Well, my resistance R is going to be voltage divided by current, which in this case is nine volts divided by 4.5 amps. Riches two ohms. Okay? This is about as much as I need you to understand in terms of relationship between voltage, current and resistance. Now the other piece that's important is combinations of resistors. So resistors can be put together in series. So here I have two resistors, R1 and R2. In this case, it's the same current that flows through them. So what I'm going to have is the total resistance is going to be a sum of R1 plus R2. If R1 and R2 are the same, then our total will be equal to two times r. If R1 equals R2. Okay? The other possibility is that they are in parallel. So here the voltages the same, but the current splits into two components. One current i1 and the other current I2. So what I have now is the total resistance, total current I is equal to I1 plus side2. They sum together when they rejoin again. Here's my current I, which is equal to the voltage divided by R1 plus voltage divided by R2. Because there is inequality here, you can kind of get rid of voltage out of this equation. And what you end up with is our total is equal to one divided by R one plus one divided by R2. Which kind of leads to our total equal to R1 times R2 divided by R1 plus R2. Which if the resistances are the same, gives you our total equal to R divided by two. If R1 is equal to two R2, then you basically get half the resistance. So if you have two resistors in series, you get twice as much resistance. If you have two resistors in parallel, you get half as much resistance. With this becomes really important when we start combining switches in parallel and series combinations, which we're going to do very shortly. Okay, so that's it for resistors. The next thing that I would like to cover is the capacitors. So here, the current, which is the change in charge over time, is also equal to the capacitance C times the change in voltage. So this is delta v divided by delta t. The only thing that's important to me in this class is a situation in which you have two parallel capacitors. If you have two capacitors that are the same in parallel, then total capacitance is twice as much. Notice that this is not the same as parallel combination of resistors. It's quite the opposite. This is because the relationship between current, voltage and capacitance is different than the relationship between current, voltage and resistance. Got. Now what is a capacitor? Capacitor is when you have two metal plates connected sandwiched inside of it if you have insulator. So if I have two metal plates and between them is an insulator, I built myself a capacitor. And if I put a positive charge on one plate of the capacitor, it's going to attract negative charge to the other plate. This charges cannot combine because they're isolated from each other since they have an insulator in between. So capacitor will tend to hold charge. The capacitance, again, is defined as a property of material. And using its geometry. Much like resistance, just slightly different approach to defining it. Okay? So this is pretty much all that you will need to know about capacitance and resistance. Are there any questions so far on this? So I don't see any questions, so we're going to move forward to the next slide. Okay, so now we will get started with our cmos switches. So Sema switches are the belt first out of metal. So this gate is in fact metal or used to be battle. But you see a cross section up here is a transistor. So this down here, this is a transistor. What is under gate is oxide oxide. And this is an insulator. And then beneath the oxide is silicon, which is semiconductor. Semiconductor is not really a metal and is not really an insulator. It's kind of in between. If you put the right type of material, it can conduct. If if you put the wrong kind of material and then it may become more insulating. So the reason why we like to use semiconductor is it allows us to build the switch that we can control from the outside. And you'll see in a second how that exactly happens. No, for right now. And notice that right here I have a gate oxide and down here I have something that's sort of like a metal. So if I put metal insulator and another piece of metal, what do I have? A capacitor? Exactly. Exactly. So one of the key pieces of transistor is this intersection between gate oxide and the semiconductor down below this piece right here, that is a capacitor. And that is what we see right here. And also right here. That's in both of the symbols. Now notice here MOS in both name stands for Metal Oxide Semiconductor. N stands for negative, p stands for positive. So when we think about cmos transistors, there are in fact complementary. Because they have n and p-type, both negative and positive type. We're going to start with negative type first. And then probably next time on Thursday we're going to talk about the positive type. So in negative type transistor so far you saw where the gate resides. Now, by in my semiconductor, if I add some material that provide some extra electrons to both source and drain areas of the semiconductor. And if I now to my gate apply a whole bunch of positive charge. So if I'm, if all my capacitor, I apply whole bunch of positive charge, what's going to happen on the other side of the capacitor? We're going to get exactly bunch of negative charge. The same thing happens in semiconductor. You're gonna get this negative charge. In this negative charge is going to create the channel that connects source and drain, because source and drain also have negative charge. So once I put bunch of positive charge here, I've created a situation in which I have something that looks a lot like a wire, except my wire has a bit of resistance on it. It has this resistance because semiconductor is not an ideal metal. It is not ideal, so it resists current flow. But since I have negative charge both in source drain and under di oxide, I have a situation in which I can actually start conducting current as long as I have something a little bit positive and the drain that actually is connected. So at this point by introducing positive charge to the gate, which we can treat as what logic one. And in fact, it turns, turns out to be approximately one volt in real circuits today, I could create a situation in which when I introduce one walt or introduce logic one, I have a switch that conducts. It doesn't connect perfectly. It has a little bit of resistance between the source and drain, right? But it can conduct current. So if I put 0 or, or logic one and the source, this will show up at the drain. I can move the data back and forth as if the transistor was a wire. But I can do this only when gate has logic one on. If gay, because a logic 0 on what I have is an open circuit. So if I put 0 or one here, nothing shows up over here. It's an open circuit. Okay? So there is no conduction. So because I have this interesting setup where I have the gate width, source and drain. And gate can be controlled with some positive voltage. I have a situation in which I can either turn it on or turn it off. I turn a dog with logic one. I turned it off with logic 0. And where do I put the logic one or logic 0 is fully under my control. It's something that's a function of what I put on this gate. Okay, so now we have created. N must switch effectively. Any questions on this? Okay? So now I'm gonna change color to green. And how there's a question, Why do I need the small positive charge outside of drain? That's actually to get negative charges start moving something to be attracted to me. Okay, so let's get started on the PMOS transistor. So it PMOS, the transistor. Things work exactly the same way, but we use the opposite charge. And I just noticed another question. Why does the part between source and drain become negative when you apply positive gate? That's a good question. It has to do with the capacitor. When I applied positive to the gate, I attract negative charge in the semiconductor. That negative charge appears just under di oxide. And because I have negative charge in source, negative charge just under the gate oxide, the negative charging drain, I effectively have this big pool of negative charge that just needs a little encouragement to start flowing. So the moment they give it, the little encouragement, everything flows. If I did the opposite, if I put the negative charge on the gate, what would happen is the switch would be opened because now I would attract positive charge on there, the oxide and negative charge in source and drain with just combined with the positive charge and there will be no flow. So that's why in one case you have the current, the other case you don't have the current. Now let's get back to the PMOS. And the PMOS situation. What we do is instead of positive, we put negative charge on the gate. Why did they put negative charge on the gate instead of attracting negative charged from the silicon substrate. Now they attract positive charge from the silicon substrate. So white circles that somebody's asking originally borough electrons when we were talking about that MOS transistor. Now that we're talking about PMOS transistor, what we're attracting is what's called the holes or diapsids, the absence of the electron or to positive charge. So what happens now, instead of having negative charges, source and drain, I have positive charge and source and drain. And I'm going to create positive charge in the channel that's just under deoxy. So negative charge on the gate will attract positive charge isn't. So let's just review that. So if I put negative charge here, I'm gonna attract positive charge from silicon. This is gate. And because I have now positive charge in source and drain, I can create current flow in this time, current is flowing using positive charge. So here, what happens is I put negative charge on the gate. This will close the switch and it causes the current to flow. So Zara and one can go between source and drain. And again, you have this situation of having resistance. The gate is still the same as the gate of the NMOS transistor. Now, unfortunately, because we have to use the opposite type of charge, we actually represent that as using a logic 0. So now when I use a logic one, the circuit is open and I cannot conduct. So this is open circuit. When I use a logic 0. Now I can conduct and I conduct through very small resistance, resistor R. So basically, this is why also I put a little bubble at the gate of the PMOS circuit. It tells me that it behaves in the opposite way to the end mass. So if I don't have a bubble, then logic one, we'll turn it on. If I have a bubble than logic 0, we'll turn it on. It's sort of like the bubble is like a little inverter. It tells you that it's the opposite. We'll use this convention then all of the other circuits that we're going to draw in the next class. So I think this pretty much concludes today's lecture. Does anybody have any questions? I don't see anything in the chat. So I am going to stop the recording. If you guys have any questions you'd like to ask me off recording. Now is the time I just